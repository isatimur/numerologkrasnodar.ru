{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","renderTooltip","props","Tooltip","id","compareWithZero","matrix","i","j","extractSumDigits","temp1","temp2","temp3","toString","replace","length","CustomTable","primaryNumbers","this","birthday","fateNumber","temperamentNumber","goalNum","goalNumber","famNum","famNumber","habbitNum","habbNum","bytNum","Table","variant","bordered","responsive","colSpan","className","React","Component","CopyExample","useState","copySuccess","setCopySuccess","textAreaRef","useRef","document","queryCommandSupported","OverlayTrigger","placement","delay","show","hide","overlay","target","Button","onClick","e","current","select","execCommand","focus","ref","value","App","mask","setMask","maskString","setMaskString","moment","Date","format","selectedDate","setSelectedDate","setPrimaryNumbers","setFateNumber","setBirthday","setTemperamentNumber","setGoalNumber","setFamNumber","habbNumber","setHabbNum","bytNumber","setBytNum","copyText","setCopyText","src","logo","alt","onChange","console","log","dateClean","firstNumber","parseInt","charAt","secondNumberText","newNum","push","thirdNumber","forthNumberText","forthNumber","ok","okk","k","getTextFromMatrix","size","showMask","placeholder","date","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.bd8727db.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {useState, useRef} from \"react\";\nimport logo from './logo.svg';\nimport MaskInput from 'react-maskinput';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport moment from \"moment\"\n\nimport {Table, Button, OverlayTrigger, Tooltip} from 'react-bootstrap';\n\nfunction renderTooltip(props) {\n    return (\n        <Tooltip id=\"button-tooltip\" {...props}>\n            Copied!\n        </Tooltip>\n    );\n}\nfunction compareWithZero(matrix, i, j) {\n    return matrix[i][j] === '-' || matrix[i][j] === 0 ? 0 : matrix[i][j];\n}\n\nfunction extractSumDigits(temp1, temp2, temp3) {\n    return (temp1 + temp2 + temp3) <= 0 ? '-' : (temp1 + temp2 + temp3).toString().replace(/0/g, \"\").length;\n}\n\nclass CustomTable extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n\n\n    render() {\n\n        const primaryNumbers = this.props.primaryNumbers;\n        const birthday = this.props.birthday;\n        const fateNumber = this.props.fateNumber;\n        const temperamentNumber = this.props.temperamentNumber;\n        const goalNum = this.props.goalNumber;\n        const famNum = this.props.famNumber;\n        const habbitNum = this.props.habbNum;\n        const bytNum = this.props.bytNum;\n\n        return (\n            <Table variant=\"dark\" bordered responsive>\n                <tbody>\n                <tr>\n                    <td  colSpan=\"2\"><p>Дата рождения:</p><span\n                        className=\"birthdate\">{birthday}</span></td>\n                    <td ><p className=\"fate-Num\">{fateNumber}</p><span className=\"num-descr\">число судьбы</span>\n                    </td>\n                    <td ><p className=\"diagonal-Num\">{temperamentNumber}</p><span\n                        className=\"num-descr\">темперамент</span>\n                    </td>\n                </tr>\n                <tr>\n                    <td ><p className=\"primary-Num\">{primaryNumbers ? primaryNumbers[0][0]: \"-\"}</p>\n                        <span\n                            className=\"num-descr\">характер</span></td>\n                    <td ><p className=\"primary-Num\">{primaryNumbers ? primaryNumbers[1][0]: \"-\"}</p>\n                        <span\n                            className=\"num-descr\">здоровье</span></td>\n                    <td ><p className=\"primary-Num\">{primaryNumbers ? primaryNumbers[2][0]: \"-\"}</p>\n                        <span\n                            className=\"num-descr\">удача</span></td>\n                    <td ><p className=\"primary-Num\">{goalNum}</p><span\n                        className=\"num-descr\">цель</span>\n                    </td>\n                </tr>\n                <tr>\n                    <td ><p className=\"primary-Num\">{primaryNumbers ? primaryNumbers[0][1]: \"-\"}</p>\n                        <span\n                            className=\"num-descr\">энергия</span></td>\n                    <td ><p className=\"primary-Num\">{primaryNumbers ? primaryNumbers[1][1]: \"-\"}</p>\n                        <span\n                            className=\"num-descr\">логика</span></td>\n                    <td ><p className=\"primary-Num\">{primaryNumbers ? primaryNumbers[2][1]: \"-\"}</p>\n                        <span\n                            className=\"num-descr\">долг</span></td>\n                    <td ><p className=\"primary-Num\">{famNum}</p><span\n                        className=\"num-descr\">семья</span>\n                    </td>\n                </tr>\n                <tr>\n                    <td ><p className=\"primary-Num\">{primaryNumbers ? primaryNumbers[0][2]: \"-\"}</p>\n                        <span\n                            className=\"num-descr\">интерес</span></td>\n                    <td ><p className=\"primary-Num\">{primaryNumbers ? primaryNumbers[1][2]: \"-\"}</p>\n                        <span\n                            className=\"num-descr\">труд</span></td>\n                    <td ><p className=\"primary-Num\">{primaryNumbers ? primaryNumbers[2][2]: \"-\"}</p>\n                        <span\n                            className=\"num-descr\">память</span></td>\n                    <td ><p className=\"primary-Num\">{habbitNum}</p><span\n                        className=\"num-descr\">привычки</span>\n                    </td>\n                </tr>\n                <tr>\n                    <td ></td>\n                    <td ><p className=\"primary-Num\">{bytNum}</p><span\n                        className=\"num-descr\">быт</span>\n                    </td>\n                    <td ></td>\n                    <td ></td>\n                </tr>\n                </tbody>\n            </Table>\n\n\n        );\n    }\n}\n\nfunction CopyExample(props) {\n\n    const [copySuccess, setCopySuccess] = useState('');\n    const textAreaRef = useRef(null);\n\n    function copyToClipboard(e) {\n        textAreaRef.current.select();\n        document.execCommand('copy');\n        // This is just personal preference.\n        // I prefer to not show the the whole text area selected.\n        e.target.focus();\n        setCopySuccess('Copied!');\n    };\n\n    return (\n        <div>\n            {\n                /* Logical shortcut for only displaying the\n                   button if the copy command exists */\n                document.queryCommandSupported('copy') &&\n                <div><OverlayTrigger   placement=\"right\"\n                                       delay={{ show: 250, hide: 400 }}\n                                       overlay={renderTooltip}\n                                       target={copySuccess}\n                >\n                <Button variant=\"dark\" onClick={copyToClipboard}>Copy</Button>\n                 </OverlayTrigger></div>\n\n            }\n            <form>\n        <textarea\n            ref={textAreaRef}\n            value={props.value}\n        />\n            </form>\n        </div>\n    );\n}\nfunction getTextFromMatrix(matrix) {\n    return \"\"+matrix[0][0]+\"/\"+matrix[0][1]+\"/\"+matrix[0][2]+\"/\"+matrix[1][0]+\"/\"+matrix[1][1]+\"/\"+matrix[1][2]+\"/\"+matrix[2][0]+\"/\"+matrix[2][1]+\"/\"+matrix[2][2];\n}\n\nfunction App(props) {\n\n    const [mask, setMask] = React.useState('00.00.0000');\n    const [maskString, setMaskString] = React.useState('DD.MM.YYYY');\n    const [locale, setLocale] = useState(\"ru\");\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [selectedDate, setSelectedDate] = useState(moment(new Date()).format(\"DD.MM.YYYY\").toString());\n    const [primaryNumbers, setPrimaryNumbers] = useState(null);\n    const [fateNumber, setFateNumber] = useState(\"-\");\n    const [birthday, setBirthday] = useState(\"-\");\n    const [temperamentNumber, setTemperamentNumber] = useState(\"-\");\n    const [goalNumber, setGoalNumber] = useState(\"-\");\n    const [famNumber, setFamNumber] = useState(\"-\");\n    const [habbNumber, setHabbNum] = useState(\"-\");\n    const [bytNumber, setBytNum] = useState(\"-\");\n    const [copyText, setCopyText] = useState(\"\");\n\n    let onChange = e => {\n            setMaskString('DD.MM.YYYY');\n            setMask('00.00.0000');\n        if (moment(e.target.value)) {\n            console.log(e.target.value);\n\n            let dateClean = e.target.value.replace(/\\./g, \"\").replace(/0/g, \"\");\n            console.log(dateClean)\n            let primaryNumbers = [];\n            let firstNumber = 0;\n\n            for (let i = 0; i < dateClean.length; i++) {\n                primaryNumbers[i] = parseInt(dateClean.charAt(i));\n                console.log(primaryNumbers[i])\n                firstNumber = firstNumber + primaryNumbers[i];\n            }\n            console.log(\"firstNumber \" + firstNumber);\n            let secondNumberText = firstNumber.toString();\n            let fateNumber = 0;\n            for (let i = 0; i < secondNumberText.length; i++) {\n                let newNum = parseInt(secondNumberText.charAt(i));\n                primaryNumbers.push(newNum);\n                console.log(primaryNumbers)\n                fateNumber = fateNumber + newNum;\n            }\n            console.log(\"SecondNumber \" + fateNumber);\n            primaryNumbers.push(fateNumber)\n\n\n            let thirdNumber = firstNumber - (2 * primaryNumbers[0]);\n            console.log(\"thirdNumber \" + thirdNumber);\n            let forthNumberText = thirdNumber.toString();\n            let forthNumber = 0;\n            for (let i = 0; i < forthNumberText.length; i++) {\n                let newNum = parseInt(forthNumberText.charAt(i));\n                primaryNumbers.push(newNum);\n                console.log(primaryNumbers)\n                forthNumber = forthNumber + newNum;\n            }\n            console.log(\"forthNumber \" + forthNumber);\n            primaryNumbers.push(forthNumber)\n            console.log(\"all numbers splitted: \" + primaryNumbers)\n\n\n            var matrix = [];\n            let ok = 0;\n            for (var i = 0; i < 3; i++) {\n                matrix[i] = [];\n                for (var j = 0; j < 3; j++) {\n                    let okk = '';\n                    ++ok;\n                    for (var k = 0; k < primaryNumbers.length; k++) {\n                        if (primaryNumbers[k] === ok) {\n                            okk = okk + primaryNumbers[k];\n                        }\n                    }\n                    matrix[i][j] = okk.length <= 0 ? '-' : okk;\n                }\n            }\n            console.log(\"Matrix \" + matrix)\n            let temp1 = compareWithZero(matrix, 2, 0);\n            let temp2 = compareWithZero(matrix, 1, 1);\n            let temp3 = compareWithZero(matrix, 0, 2);\n            let temperamentNumber = extractSumDigits(temp1, temp2, temp3);\n\n            var goal1 = compareWithZero(matrix, 0, 0);\n            var goal2 = compareWithZero(matrix, 1, 0);\n            var goal3 = compareWithZero(matrix, 2, 0);\n            let goalNumber = extractSumDigits(goal1, goal2, goal3);\n\n\n            var fam1 = compareWithZero(matrix, 0, 1);\n            var fam2 = compareWithZero(matrix, 1, 1);\n            var fam3 = compareWithZero(matrix, 2, 1);\n            let famNumber = extractSumDigits(fam1, fam2, fam3);\n\n            var hab1 = compareWithZero(matrix, 0, 2);\n            var hab2 = compareWithZero(matrix, 1, 2);\n            var hab3 = compareWithZero(matrix, 2, 2);\n            let habbNumber = extractSumDigits(hab1, hab2, hab3);\n\n            var byt1 = compareWithZero(matrix, 1, 0);\n            var byt2 = compareWithZero(matrix, 1, 1);\n            var byt3 = compareWithZero(matrix, 1, 2);\n            let bytNumber = extractSumDigits(byt1, byt2, byt3);\n\n            setSelectedDate(e.target.value);\n            setPrimaryNumbers(matrix);\n            setFateNumber(fateNumber);\n            setBirthday(e.target.value);\n            setTemperamentNumber(temperamentNumber);\n            setGoalNumber(goalNumber);\n            setFamNumber(famNumber);\n            setHabbNum(habbNumber);\n            setBytNum(bytNumber);\n            console.log(matrix)\n            setCopyText(getTextFromMatrix(matrix)+\"/\"+fateNumber+\"число судьбы/\"\n                +temperamentNumber+\"темп/\"+goalNumber+\"цель/\"+famNumber+\"семья/\"\n                +habbNumber+\"привычки/\"+bytNumber+\"быт\")\n\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n                {/*<DateInput date={moment(this.context.selectedDate).format(\"YYYY-MM-DD\")}>*/}\n                {/*</DateInput>*/}\n                <MaskInput\n                    onChange={(e) => onChange(e)}\n                    maskString={maskString}\n                    mask={mask}\n                    size={35}\n                    showMask\n                    placeholder=\"Введите день рождение 31.12.1920\">\n                </MaskInput>\n                <br/>\n\n                <CustomTable date={selectedDate} primaryNumbers={primaryNumbers}\n                       fateNumber={fateNumber} birthday={birthday}\n                       temperamentNumber={temperamentNumber} goalNumber={goalNumber}\n                       famNumber={famNumber} habbNum={habbNumber} bytNum={bytNumber}/>\n\n                       <CopyExample variant=\"dark\" value={copyText}/>\n            </header>\n        </div>\n    );\n}\n\n//\"07.03.1988\"\n// <!-- {moment(selectedDate).format('DD.MM.YYYY').toString()} -->\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}